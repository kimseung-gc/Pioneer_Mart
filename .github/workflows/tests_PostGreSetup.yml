# Basic workflow
name: PostGreSetUp-testing

# Controls
on:
  # Triggers the workflow on push or pull request events on "main" branch
  push:
    branches: "**"
  pull_request:
    branches: "**"

  # Run this workflow manually?
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: ['3.8']
    # Docker Hub image that `container-job` executes in
    container: node:20-bookworm-slim

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setting up python
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Run a test file with django test
      - name: Install django requirements
        working-directory: ./src/backend
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
      # - name: Generate Random Key
      #   working-directory: ./src/backend
      #   run: |
      #     python3 generate_random_key.py
      - name: Test with django
        working-directory: ./src/backend
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: |
          python3 manage.py migrate
          python3 manage.py test